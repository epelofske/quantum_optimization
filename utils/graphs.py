import networkx as nx

def ibmqx4():
        G = nx.Graph()
        G.add_edge(0, 1)
        G.add_edge(2, 1)
        G.add_edge(2, 0)
        G.add_edge(3, 2)
        G.add_edge(2, 4)
        G.add_edge(3, 4)
        return G
def melbourne():
        G = nx.Graph()
        G.add_edge(0, 1)
        G.add_edge(1, 2)
        G.add_edge(13, 1)
        G.add_edge(13, 12)
        G.add_edge(12, 2)
        G.add_edge(2, 3)
        G.add_edge(11, 12)
        G.add_edge(11, 3)
        G.add_edge(4, 3)
        G.add_edge(11, 10)
        G.add_edge(4, 10)
        G.add_edge(5, 4)
        G.add_edge(9, 10)
        G.add_edge(5, 9)
        G.add_edge(5, 6)
        G.add_edge(9, 8)
        G.add_edge(6, 8)
        G.add_edge(7, 8)
        return G
def agave():
        G = nx.Graph()
        G.add_edge(0, 1)
        G.add_edge(1, 2)
        G.add_edge(2, 3)
        G.add_edge(3, 4)
        G.add_edge(4, 5)
        G.add_edge(5, 6)
        G.add_edge(6, 7)
        G.add_edge(7, 0)
        return G
def acorn():
        G = nx.Graph()
        G.add_edge(0, 5)
        G.add_edge(0, 6)
        G.add_edge(5, 10)
        G.add_edge(10, 15)
        G.add_edge(10, 16)
        G.add_edge(16, 11)
        G.add_edge(11, 17)
        G.add_edge(1, 6)
        G.add_edge(1, 7)
        G.add_edge(2, 7)
        G.add_edge(17, 12)
        G.add_edge(12, 18)
        G.add_edge(18, 13)
        G.add_edge(13, 19)
        G.add_edge(19, 14)
        G.add_edge(9, 14)
        G.add_edge(4, 9)
        G.add_edge(3, 9)
        G.add_edge(3, 8)
        G.add_edge(2, 8)
        G.add_edge(6, 11)
        G.add_edge(7, 12)
        G.add_edge(8, 13)
        return G
def aspen():
        G = nx.Graph()
        G.add_edge(6, 5)
        G.add_edge(5, 4)
        G.add_edge(4, 3)
        G.add_edge(3, 2)
        G.add_edge(2, 1)
        G.add_edge(1, 0)
        G.add_edge(0, 7)
        G.add_edge(7, 6)
        G.add_edge(15, 16)
        G.add_edge(16, 17)
        G.add_edge(17, 10)
        G.add_edge(10, 11)
        G.add_edge(11, 12)
        G.add_edge(13, 12)
        G.add_edge(13, 14)
        G.add_edge(15, 14)
        G.add_edge(2, 15)
        G.add_edge(1, 16)
        return G
